/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Modelo.Archivo.ArchivoDatos;
import Modelo.BaseDeDatos.Conexion;
import Modelo.BaseDeDatos.ProcedimientoAlmacenado;
import Modelo.Datos.Alumno;
import Modelo.Datos.Carrera;
import Modelo.Datos.Contacto;
import Modelo.Datos.Direccion;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author LastShadow
 */
public class FrmRegistrarAlumno extends javax.swing.JFrame {

    ArrayList<Alumno> listaAlumnosArchivos;
    ArrayList<Alumno> listaAlumnosObjetos;
    int opcion = -1;

    /**
     * Creates new form FromRegistrarAlumno
     */
    public FrmRegistrarAlumno() {
        initComponents();
        setLocationRelativeTo(null);
        cargarComboBox();
        rbtHombre.setSelected(rootPaneCheckingEnabled);

        //Cargar datos
        listaAlumnosArchivos = ArchivoDatos.cargarDatosArchivos();
        listaAlumnosObjetos = ArchivoDatos.cargarDatosObjetos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoGenero = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        rbtHombre = new javax.swing.JRadioButton();
        rbtMujer = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        txtMatricula = new javax.swing.JTextField();
        cbCarrera = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        txtColonia = new javax.swing.JTextField();
        txtCodigoPostal = new javax.swing.JTextField();
        txtCiudad = new javax.swing.JTextField();
        txtEstado = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnBuscar = new javax.swing.JButton();
        btnDarBaja = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtCelular = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        txtNumeroFijo = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtFacebook = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtTwitter = new javax.swing.JTextField();
        cbTipoDeUso = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(36, 47, 65));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Carrera:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 67, -1, -1));

        jPanel1.setBackground(new java.awt.Color(36, 47, 65));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos generales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), java.awt.Color.white)); // NOI18N
        jPanel1.setForeground(java.awt.Color.white);

        jLabel3.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Apellidos:");

        jLabel4.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("Nombre:");

        jLabel5.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("Género:");

        grupoGenero.add(rbtHombre);
        rbtHombre.setForeground(java.awt.Color.white);
        rbtHombre.setText("Hombre");

        grupoGenero.add(rbtMujer);
        rbtMujer.setForeground(java.awt.Color.white);
        rbtMujer.setText("Mujer");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(rbtHombre)
                        .addGap(27, 27, 27)
                        .addComponent(rbtMujer)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 706, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rbtHombre)
                    .addComponent(rbtMujer))
                .addGap(6, 6, 6))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 105, 828, -1));

        jLabel16.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel16.setForeground(java.awt.Color.white);
        jLabel16.setText("Matrícula:");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 31, -1, -1));
        getContentPane().add(txtMatricula, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 21, 238, -1));

        cbCarrera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TSU TIC", "TSU CONTABILIDAD", "TSU ADMINISTRACION" }));
        cbCarrera.setToolTipText("");
        getContentPane().add(cbCarrera, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 57, 238, -1));

        jPanel2.setBackground(new java.awt.Color(36, 47, 65));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dirección", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), java.awt.Color.white)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("Calle:");

        jLabel7.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("Colonia:");

        jLabel8.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("Estado:");

        jLabel10.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("C.P.:");

        jLabel11.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel11.setForeground(java.awt.Color.white);
        jLabel11.setText("Ciudad:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtColonia, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoPostal))
                    .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEstado)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtColonia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCodigoPostal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtEstado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11)))
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 254, -1, -1));

        jPanel4.setBackground(new java.awt.Color(36, 47, 65));
        jPanel4.setForeground(java.awt.Color.white);

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/seo.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnDarBaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminar.png"))); // NOI18N
        btnDarBaja.setText("Dar de baja");
        btnDarBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarBajaActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/modificar.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/registrar.png"))); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(36, 47, 65));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contacto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), java.awt.Color.white)); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(828, 175));

        jLabel9.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("Celular:");

        jLabel12.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel12.setForeground(java.awt.Color.white);
        jLabel12.setText("Número fijo:");

        jLabel13.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel13.setForeground(java.awt.Color.white);
        jLabel13.setText("Correo:");

        jLabel14.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel14.setForeground(java.awt.Color.white);
        jLabel14.setText("Facebook:");

        jLabel15.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel15.setForeground(java.awt.Color.white);
        jLabel15.setText("Twitter:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel9))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNumeroFijo, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTwitter, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(27, 27, 27)
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtFacebook, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txtFacebook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTwitter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNumeroFijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(38, 38, 38))
        );

        cbTipoDeUso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ARCHIVOS", "OBJETOS", "BASE DE DATOS" }));
        cbTipoDeUso.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Bitstream Vera Sans", 0, 15)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Tipo de uso:");

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/mas.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDarBaja)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(cbTipoDeUso, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(24, 24, 24))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(btnRegistrar)
                    .addComponent(btnDarBaja)
                    .addComponent(btnNuevo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipoDeUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 325, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 610));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        opcion = this.cbTipoDeUso.getSelectedIndex();
        String matricula = this.txtMatricula.getText();
//        if (camposVacios()) {
//            JOptionPane.showMessageDialog(this, mensajeCamposVacios());
//        } else {
        switch (opcion) {
            case 0:
                /*Caso con manejo de archivos*/
                if (matriculaDuplicadaArchivos(matricula)) {
                    JOptionPane.showMessageDialog(this, "Matrícula " + matricula + " ya existe.");
                } else {
                    insertarRegistroArchivo();
                }
                break;
            case 1:
                /*Caso con manejo de objetos*/
                if (matriculaDuplicadaObjetos(matricula)) {
                    JOptionPane.showMessageDialog(this, "Matrícula " + matricula + " ya existe.");
                } else {
                    insertarRegistroObjetos();
                }
                break;
            case 2:
                /*Caso con Base de datos*/
                if (matriculaDuplicadaBD(matricula)) {
                    JOptionPane.showMessageDialog(this, "Matrícula " + matricula + " ya existe.");
                } else {
                    insertarRegistroBD();
                }
                break;
        }
//        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnDarBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarBajaActionPerformed
        opcion = cbTipoDeUso.getSelectedIndex();

        switch (opcion) {
            case 0:
                eliminarResgistroArchivos();
                break;
            case 1:
                eliminarRegistroObjetos();
                break;
            case 2:
                eliminarRegistroBD();
                break;
        }
    }//GEN-LAST:event_btnDarBajaActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        opcion = this.cbTipoDeUso.getSelectedIndex();
        String matricula = this.txtMatricula.getText();
        Alumno alumno;

        switch (opcion) {
            case 0:
                alumno = buscarArchivos(matricula);
                if (alumno == null) {
                    JOptionPane.showMessageDialog(this, "La matrícula " + matricula + " no existe");
                    limpiarCampos();
                } else {
                    llenarCampos(alumno);
                }
                break;
            case 1:
                alumno = buscarObjetos(matricula);
                if (alumno == null) {
                    JOptionPane.showMessageDialog(this, "La matrícula " + matricula + " no existe");
                    limpiarCampos();
                } else {
                    llenarCampos(alumno);
                }
                break;
            case 2:
                if (matriculaExisteBD(matricula)) {
                    llenarCamposBD(matricula);
                } else {
                    JOptionPane.showMessageDialog(this, "La matrícula " + matricula + " no existe");
                    limpiarCampos();
                }
                break;
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        opcion = this.cbTipoDeUso.getSelectedIndex();
        
        switch(opcion){
            case 0:
                actualizarRegistroArchivos();
                break;
            case 1:
                actualizarRegistroObjetos();
                break;
            case 2:
                actualizarRegistroBD();
                break;
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    /*
    *
    *Métodos sueltos
    *
     */
    private void llenarCampos(Alumno alumno) {
        this.cbTipoDeUso.setSelectedIndex(this.cbTipoDeUso.getSelectedIndex());
        this.cbCarrera.setSelectedIndex(alumno.getCarrera().getId());
        this.txtNombre.setText(alumno.getNombre());
        this.txtApellidos.setText(alumno.getApellidos());
        if (alumno.getGenero() == 'H') {
            this.rbtHombre.setSelected(true);
        }
        if (alumno.getGenero() == 'M') {
            this.rbtMujer.setSelected(true);
        }
        this.txtCalle.setText(alumno.getDireccion().getCalle());
        this.txtColonia.setText(alumno.getDireccion().getColonia());
        this.txtCodigoPostal.setText(alumno.getDireccion().getCp());
        this.txtCiudad.setText(alumno.getDireccion().getCiudad());
        this.txtEstado.setText(alumno.getDireccion().getEstado());
        this.txtCelular.setText(alumno.getContacto().getNumCelular());
        this.txtCorreo.setText(alumno.getContacto().getCorreo());
        this.txtNumeroFijo.setText(alumno.getContacto().getNumFijo());
        this.txtFacebook.setText(alumno.getContacto().getFacebook());
        this.txtTwitter.setText(alumno.getContacto().getTwitter());
    }

    private void cargarComboBox() {
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        Conexion con = Conexion.getConexion();
        try {
            ResultSet resultado = con.consultar("SELECT * FROM tb_carreras");
            while (resultado.next()) {
                modelo.addElement(resultado.getString(2));
            }
            cbCarrera.setModel(modelo);
//            con.cerrarConexion();
        } catch (SQLException ex) {
            System.out.println("Error al cargar ComboBox. " + ex.getMessage());
            System.out.println("Código: " + ex.getErrorCode());
        }
    }

    private void limpiarCampos() {
        this.txtMatricula.setText("");
        System.out.println("Holii" + cbTipoDeUso.getSelectedIndex());
        this.cbTipoDeUso.setSelectedIndex(this.cbTipoDeUso.getSelectedIndex());
        this.txtNombre.setText("");
        this.txtApellidos.setText("");
        this.rbtHombre.setSelected(true);
        this.txtCalle.setText("");
        this.txtColonia.setText("");
        this.txtCodigoPostal.setText("");
        this.txtCiudad.setText("");
        this.txtEstado.setText("");
        this.txtCelular.setText("");
        this.txtCorreo.setText("");
        this.txtNumeroFijo.setText("");
        this.txtFacebook.setText("");
        this.txtTwitter.setText("");
    }

    private void bloquearCampos() {
        this.cbTipoDeUso.setEnabled(false);
        this.txtNombre.setEnabled(false);
        this.txtApellidos.setEnabled(false);
        this.rbtHombre.setEnabled(false);
        this.rbtMujer.setEnabled(false);
        this.txtCalle.setEnabled(false);
        this.txtColonia.setEnabled(false);
        this.txtCodigoPostal.setEnabled(false);
        this.txtCiudad.setEnabled(false);
        this.txtEstado.setEnabled(false);
        this.txtCelular.setEnabled(false);
        this.txtCorreo.setEnabled(false);
        this.txtNumeroFijo.setEnabled(false);
        this.txtFacebook.setEnabled(false);
        this.txtTwitter.setEnabled(false);
    }

    private void desbloquearCampos() {
        this.txtMatricula.setEnabled(true);
        this.cbTipoDeUso.setEnabled(true);
        this.txtNombre.setEnabled(true);
        this.txtApellidos.setEnabled(true);
        this.rbtHombre.setEnabled(true);
        this.rbtMujer.setEnabled(true);
        this.txtCalle.setEnabled(true);
        this.txtColonia.setEnabled(true);
        this.txtCodigoPostal.setEnabled(true);
        this.txtCiudad.setEnabled(true);
        this.txtEstado.setEnabled(true);
        this.txtCelular.setEnabled(true);
        this.txtCorreo.setEnabled(true);
        this.txtNumeroFijo.setEnabled(true);
        this.txtFacebook.setEnabled(true);
        this.txtTwitter.setEnabled(true);
    }

    private boolean camposVacios() {
        if (this.txtMatricula.getText().equals("")) {
            return true;
        }
        if (this.txtNombre.getText().equals("")) {
            return true;
        }
        if (this.txtApellidos.getText().equals("")) {
            return true;
        }
        if (this.txtCalle.getText().equals("")) {
            return true;
        }
        if (this.txtColonia.getText().equals("")) {
            return true;
        }
        if (this.txtCodigoPostal.getText().equals("")) {
            return true;
        }
        if (this.txtCiudad.getText().equals("")) {
            return true;
        }
        if (this.txtEstado.getText().equals("")) {
            return true;
        }
        if (this.txtCelular.getText().equals("")) {
            return true;
        }
        if (this.txtCorreo.getText().equals("")) {
            return true;
        }
        if (this.txtNumeroFijo.getText().equals("")) {
            return true;
        }
        if (this.txtFacebook.getText().equals("")) {
            return true;
        }
        if (this.txtTwitter.getText().equals("")) {
            return true;
        }

        return false;
    }

    private String mensajeCamposVacios() {
        String mensaje = "Faltan llenar los siguientes campos:";
        if (this.txtMatricula.getText().equals("")) {
            mensaje += "\nMatrícula";
        }
        if (this.txtNombre.getText().equals("")) {
            mensaje += "\nNombre";
        }
        if (this.txtApellidos.getText().equals("")) {
            mensaje += "\nApellidos";
        }
        if (this.txtCalle.getText().equals("")) {
            mensaje += "\nCalle";
        }
        if (this.txtColonia.getText().equals("")) {
            mensaje += "\nColonia";
        }
        if (this.txtCodigoPostal.getText().equals("")) {
            mensaje += "\nCódigo Postal";
        }
        if (this.txtCiudad.getText().equals("")) {
            mensaje += "\nCiudad";
        }
        if (this.txtEstado.getText().equals("")) {
            mensaje += "\nEstado";
        }
        if (this.txtCelular.getText().equals("")) {
            mensaje += "\nCelular";
        }
        if (this.txtCorreo.getText().equals("")) {
            mensaje += "\nCorreo";
        }
        if (this.txtNumeroFijo.getText().equals("")) {
            mensaje += "\nNúmero Fijo";
        }
        if (this.txtFacebook.getText().equals("")) {
            mensaje += "\nFacebook";
        }
        if (this.txtTwitter.getText().equals("")) {
            mensaje += "\nTwitter";
        }

        return mensaje;
    }

    /*
    *Métodos base de datos.
     */
    private boolean matriculaDuplicadaBD(String matricula) {
        int resultado = 0;
        try {
            Conexion con = Conexion.getConexion();
            ResultSet resultadoConsulta = con.consultar("SELECT COUNT(*) FROM `tb_alumnos` WHERE matricula = '" + matricula + "'");
            resultadoConsulta.first();
            resultado = resultadoConsulta.getInt(1);
        } catch (SQLException ex) {
            System.out.println("No se pudo realizar la consulta. Error: " + ex.getMessage());
        }
        if (resultado > 1) {
            return true;
        } else {
            return false;
        }
    }

    private boolean matriculaExisteBD(String matricula) {
        int resultado = -1;
        try {
            Conexion con = Conexion.getConexion();
            ResultSet resultadoConsulta = con.consultar("SELECT COUNT(*) FROM `tb_alumnos` WHERE matricula = '" + matricula + "'");
            resultadoConsulta.first();
            resultado = resultadoConsulta.getInt(1);
        } catch (SQLException ex) {
            System.out.println("No se pudo realizar la consulta. Error: " + ex.getMessage());
        }
        if (resultado > 0) {
            return true;
        } else {
            return false;
        }
    }

    private void insertarRegistroBD() {
        String matricula = this.txtMatricula.getText();
        String nombre = this.txtNombre.getText();
        String apellidos = this.txtApellidos.getText();
        String genero = (this.rbtHombre.isSelected()) ? "H" : "M";
        String calle = this.txtCalle.getText();
        String colonia = this.txtColonia.getText();
        String cp = this.txtCodigoPostal.getText();
        String ciudad = this.txtCiudad.getText();
        String estado = this.txtEstado.getText();
        String celular = this.txtCelular.getText();
        String nFijo = this.txtNumeroFijo.getText();
        String correo = this.txtCorreo.getText();
        String facebook = this.txtFacebook.getText();
        String twitter = this.txtTwitter.getText();
        String carrera = this.cbCarrera.getSelectedItem().toString();
        String indexCarrera = String.valueOf(this.cbCarrera.getSelectedIndex());
        boolean seRegistro = ProcedimientoAlmacenado.insertarRegistro(matricula, nombre, apellidos, genero, calle, colonia, cp, ciudad, estado, celular, nFijo, correo, facebook, twitter, carrera, indexCarrera);

        if (seRegistro == true) {
            JOptionPane.showMessageDialog(this, "Registro agregado con éxito");
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Registro no pudo ser agregado.");
        }
    }

    private void llenarCamposBD(String matricula) {
        try {
            ResultSet resultado = ProcedimientoAlmacenado.buscarAlumnos(matricula);
            resultado.next();
            this.txtMatricula.setText(resultado.getString(2));
            int index = Integer.parseInt(resultado.getString(17));
            this.cbCarrera.setSelectedIndex(index);
            this.txtNombre.setText(resultado.getString(3));
            this.txtApellidos.setText(resultado.getString(4));
            char genero = resultado.getString(5).charAt(0);
            if (genero == 'H') {
                this.rbtHombre.setSelected(rootPaneCheckingEnabled);
            }
            if (genero == 'M') {
                this.rbtMujer.setSelected(rootPaneCheckingEnabled);
            }
            this.txtCalle.setText(resultado.getString(6));
            this.txtColonia.setText(resultado.getString(7));
            this.txtCodigoPostal.setText(resultado.getString(8));
            this.txtCiudad.setText(resultado.getString(9));
            this.txtEstado.setText(resultado.getString(10));
            this.txtCelular.setText(resultado.getString(11));
            this.txtNumeroFijo.setText(resultado.getString(12));
            this.txtCorreo.setText(resultado.getString(13));
            this.txtFacebook.setText(resultado.getString(14));
            this.txtTwitter.setText(resultado.getString(15));

        } catch (SQLException ex) {
            Logger.getLogger(FrmRegistrarAlumno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void eliminarRegistroBD() {
        if (this.txtMatricula.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(rootPane, "Favor de ingresar una matrícula");
        } else {
            if (ProcedimientoAlmacenado.eliminarAlumnos(this.txtMatricula.getText())) {
                JOptionPane.showMessageDialog(rootPane, "Matrícula " + this.txtMatricula.getText() + " eliminado con éxito.");
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Matrícula no existe");
            }
        }
    }

    private void actualizarRegistroBD() {
        String matricula = this.txtMatricula.getText();
        String nombre = this.txtNombre.getText();
        String apellidos = this.txtApellidos.getText();
        String genero = (this.rbtHombre.isSelected()) ? "H" : "M";
        String calle = this.txtCalle.getText();
        String colonia = this.txtColonia.getText();
        String cp = this.txtCodigoPostal.getText();
        String ciudad = this.txtCiudad.getText();
        String estado = this.txtEstado.getText();
        String celular = this.txtCelular.getText();
        String nFijo = this.txtNumeroFijo.getText();
        String correo = this.txtCorreo.getText();
        String facebook = this.txtFacebook.getText();
        String twitter = this.txtTwitter.getText();
        String carrera = this.cbCarrera.getSelectedItem().toString();
        String indexCarrera = String.valueOf(this.cbCarrera.getSelectedIndex());
        boolean seRegistro = ProcedimientoAlmacenado.actualizarRegistro(matricula, nombre, apellidos, genero, calle, colonia, cp, ciudad, estado, celular, nFijo, correo, facebook, twitter, carrera, indexCarrera);

        if (seRegistro == true) {
            JOptionPane.showMessageDialog(this, "Registro actualizado con éxito");
            limpiarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Registro no pudo ser actualizado.");
        }
    }

    /*
    *Métodos manejo de archivos
     */
    boolean matriculaDuplicadaArchivos(String matricula) {
        for (Alumno alumno : this.listaAlumnosArchivos) {
            if (matricula.equals(alumno.getMatricula())) {
                return true;
            }
        }
        return false;
    }

    private Alumno buscarArchivos(String matricula) {
        for (Alumno alumno : this.listaAlumnosArchivos) {
            if (matricula.equals(alumno.getMatricula())) {
                return alumno;
            }
        }
        return null;
    }

    public void insertarRegistroArchivo() {
        Alumno alumno = new Alumno();
        alumno.setMatricula(this.txtMatricula.getText());
        alumno.setCarrera(new Carrera(this.cbCarrera.getSelectedIndex(), this.cbCarrera.getSelectedItem().toString()));
        alumno.setContacto(new Contacto(this.txtCelular.getText(),
                this.txtNumeroFijo.getText(),
                this.txtFacebook.getText(),
                this.txtTwitter.getText(),
                this.txtCorreo.getText()));
        alumno.setDireccion(new Direccion(this.txtCalle.getText(),
                this.txtColonia.getText(),
                this.txtCiudad.getText(),
                this.txtEstado.getText(),
                this.txtCodigoPostal.getText()));
        alumno.setNombre(this.txtNombre.getText());
        alumno.setApellidos(this.txtApellidos.getText());
        alumno.setGenero((this.rbtHombre.isSelected()) ? 'H' : 'M');

        ArchivoDatos archivo = new ArchivoDatos(alumno.getMatricula());
        archivo.guardarDatos(alumno);
        this.listaAlumnosArchivos.add(alumno);
        JOptionPane.showMessageDialog(this, "Registro agregado con éxito.");
        limpiarCampos();
    }

    private void eliminarResgistroArchivos() {
        Alumno alumno = buscarArchivos(this.txtMatricula.getText());
        ArchivoDatos archivo = new ArchivoDatos();
        if (this.txtMatricula.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Favor de ingresar una matrícula");
        } else {
            if (alumno != null) {
                JOptionPane.showMessageDialog(rootPane, "Matrícula " + this.txtMatricula.getText() + " eliminado con éxito.");
                archivo.eliminarDatosArchivos(this.txtMatricula.getText());
                listaAlumnosObjetos.remove(alumno);
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Matrícula no existe");
            }
        }
    }

    private void actualizarRegistroArchivos() {
        Alumno alumno = buscarArchivos(this.txtMatricula.getText());
        alumno.setMatricula(this.txtMatricula.getText());
        alumno.setCarrera(new Carrera(this.cbTipoDeUso.getSelectedIndex(), this.cbTipoDeUso.getSelectedItem().toString()));
        alumno.setContacto(new Contacto(this.txtCelular.getText(),
                this.txtNumeroFijo.getText(),
                this.txtFacebook.getText(),
                this.txtTwitter.getText(),
                this.txtCorreo.getText()));
        alumno.setDireccion(new Direccion(this.txtCalle.getText(),
                this.txtColonia.getText(),
                this.txtCiudad.getText(),
                this.txtEstado.getText(),
                this.txtCodigoPostal.getText()));
        alumno.setNombre(this.txtNombre.getText());
        alumno.setApellidos(this.txtApellidos.getText());
        alumno.setGenero((this.rbtHombre.isSelected()) ? 'H' : 'M');
        int posicion = listaAlumnosArchivos.indexOf(alumno);
        listaAlumnosArchivos.set(posicion, alumno);
        ArchivoDatos archivo = new ArchivoDatos(alumno.getMatricula());
        archivo.guardarDatos(alumno);
        JOptionPane.showMessageDialog(this, "Modificado con éxito");
    }

    /*
    *Métodos manejo de objetos
     */
    public boolean matriculaDuplicadaObjetos(String matricula) {
        for (Alumno alumno : this.listaAlumnosObjetos) {
            if (matricula.equals(alumno.getMatricula())) {
                return true;
            }
        }
        return false;
    }

    private Alumno buscarObjetos(String matricula) {
        for (Alumno alumno : this.listaAlumnosObjetos) {
            if (matricula.equals(alumno.getMatricula())) {
                return alumno;
            }
        }
        return null;
    }

    public void insertarRegistroObjetos() {
        Alumno alumno = new Alumno();
        alumno.setMatricula(this.txtMatricula.getText());
        alumno.setCarrera(new Carrera(this.cbCarrera.getSelectedIndex(), this.cbCarrera.getSelectedItem().toString()));
        alumno.setContacto(new Contacto(this.txtCelular.getText(),
                this.txtNumeroFijo.getText(),
                this.txtFacebook.getText(),
                this.txtTwitter.getText(),
                this.txtCorreo.getText()));
        alumno.setDireccion(new Direccion(this.txtCalle.getText(),
                this.txtColonia.getText(),
                this.txtCiudad.getText(),
                this.txtEstado.getText(),
                this.txtCodigoPostal.getText()));
        alumno.setNombre(this.txtNombre.getText());
        alumno.setApellidos(this.txtApellidos.getText());
        alumno.setGenero((this.rbtHombre.isSelected()) ? 'H' : 'M');

        ArchivoDatos archivo = new ArchivoDatos(alumno.getMatricula());
        archivo.guardarObjeto(alumno, this.txtMatricula.getText());
        this.listaAlumnosObjetos.add(alumno);
        JOptionPane.showMessageDialog(this, "Registro agregado con éxito.");
        limpiarCampos();
    }

    private void eliminarRegistroObjetos() {
        Alumno alumno = buscarObjetos(this.txtMatricula.getText());
        ArchivoDatos archivo = new ArchivoDatos();
        if (this.txtMatricula.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Favor de ingresar una matrícula");
        } else {
            if (alumno != null) {
                JOptionPane.showMessageDialog(rootPane, "Matrícula " + this.txtMatricula.getText() + " eliminado con éxito.");
                listaAlumnosObjetos.remove(alumno);
                archivo.eliminarDatosObjetos(this.txtMatricula.getText());
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Matrícula no existe");
            }
        }
    }

    private void actualizarRegistroObjetos() {
        int posicion = -1;
        for (int i = 0; i < listaAlumnosObjetos.size(); i++) {
            if(this.listaAlumnosObjetos.get(i).getMatricula().equalsIgnoreCase(this.txtMatricula.getText())){
                posicion = i;
                break;
            }
        }
        Alumno alumno = buscarObjetos(this.txtMatricula.getText());
        ArchivoDatos archivo = new ArchivoDatos(this.txtMatricula.getText());
        System.out.println(this.txtMatricula.getText());
        archivo.eliminarDatosObjetos(this.txtMatricula.getText());        
        alumno.setMatricula(this.txtMatricula.getText());
        alumno.setCarrera(new Carrera(this.cbTipoDeUso.getSelectedIndex(), this.cbTipoDeUso.getSelectedItem().toString()));
        alumno.setContacto(new Contacto(this.txtCelular.getText(),
                this.txtNumeroFijo.getText(),
                this.txtFacebook.getText(),
                this.txtTwitter.getText(),
                this.txtCorreo.getText()));
        alumno.setDireccion(new Direccion(this.txtCalle.getText(),
                this.txtColonia.getText(),
                this.txtCiudad.getText(),
                this.txtEstado.getText(),
                this.txtCodigoPostal.getText()));
        alumno.setNombre(this.txtNombre.getText());
        alumno.setApellidos(this.txtApellidos.getText());
        alumno.setGenero((this.rbtHombre.isSelected()) ? 'H' : 'M');
        
        
        System.out.println("posicion " + posicion);
        listaAlumnosObjetos.set(posicion, alumno);
 
        archivo.guardarObjeto(alumno, this.txtMatricula.getText());
        JOptionPane.showMessageDialog(this, "Registro actualizado con éxito.");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("GTK+".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRegistrarAlumno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRegistrarAlumno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDarBaja;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRegistrar;
    public javax.swing.JComboBox<String> cbCarrera;
    public javax.swing.JComboBox<String> cbTipoDeUso;
    private javax.swing.ButtonGroup grupoGenero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public javax.swing.JRadioButton rbtHombre;
    public javax.swing.JRadioButton rbtMujer;
    public javax.swing.JTextField txtApellidos;
    public javax.swing.JTextField txtCalle;
    public javax.swing.JTextField txtCelular;
    public javax.swing.JTextField txtCiudad;
    public javax.swing.JTextField txtCodigoPostal;
    public javax.swing.JTextField txtColonia;
    public javax.swing.JTextField txtCorreo;
    public javax.swing.JTextField txtEstado;
    public javax.swing.JTextField txtFacebook;
    public javax.swing.JTextField txtMatricula;
    public javax.swing.JTextField txtNombre;
    public javax.swing.JTextField txtNumeroFijo;
    public javax.swing.JTextField txtTwitter;
    // End of variables declaration//GEN-END:variables
}
